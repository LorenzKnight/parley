{"remainingRequest":"/Users/lorenz/Documents/code/parley/node_modules/babel-loader/lib/index.js!/Users/lorenz/Documents/code/parley/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lorenz/Documents/code/parley/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lorenz/node_modules/v-calendar-scheduler/components/VueScheduler.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lorenz/node_modules/v-calendar-scheduler/components/VueScheduler.vue","mtime":1527723358000},{"path":"/Users/lorenz/Documents/code/parley/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lorenz/Documents/code/parley/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lorenz/Documents/code/parley/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lorenz/Documents/code/parley/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectWithoutProperties from \"/Users/lorenz/Documents/code/parley/node_modules/@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Event from \"../model/Event\";\nimport config from \"../utils/config\";\nimport { defaultLabels, defaultViews } from \"../utils/config\";\nimport { EventBus } from \"./EventBus\";\nimport moment from 'moment';\nimport Month from \"./views/Month\";\nimport Week from \"./views/Week\";\nimport Day from \"./views/Day\";\nimport EventDialog from \"./dialog\";\nexport default {\n  name: \"VueScheduler\",\n  components: {\n    Month: Month,\n    Week: Week,\n    Day: Day\n  },\n  props: {\n    events: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    showTodayButton: {\n      type: Boolean,\n      default: function _default() {\n        return config.showTodayButton;\n      }\n    },\n    minDate: {\n      type: [Date, Object],\n      default: function _default() {\n        return config.minDate;\n      }\n    },\n    maxDate: {\n      type: [Date, Object],\n      default: function _default() {\n        return config.maxDate;\n      }\n    },\n    labels: {\n      type: Object,\n      default: function _default() {\n        return config.labels;\n      },\n      validator: function validator(value) {\n        for (var labelKey in defaultLabels) {\n          if (!value.hasOwnProperty(labelKey)) {\n            console.error('Missing prop label: ' + labelKey);\n            return false;\n          }\n        }\n\n        return true;\n      }\n    },\n    timeRange: {\n      type: Array,\n      default: function _default() {\n        return config.timeRange;\n      },\n      validator: function validator(value) {\n        if (value.length !== 2 || value[0] > value[1] || value[0] < 0 || value[1] > 23) {\n          console.error('Invalid time range.');\n          return false;\n        }\n\n        return true;\n      }\n    },\n    availableViews: {\n      type: Array,\n      default: function _default() {\n        return config.availableViews;\n      },\n      validator: function validator(value) {\n        var possible = defaultViews;\n        var error = false;\n        value.forEach(function (view) {\n          if (possible.indexOf(view) === -1) {\n            console.error('Invalid view: ' + view);\n            error = true;\n          }\n        });\n        return !error;\n      }\n    },\n    initialDate: {\n      type: [Date, Object],\n      default: function _default() {\n        return config.initialDate;\n      }\n    },\n    initialView: {\n      type: String,\n      default: function _default() {\n        return config.initialView;\n      }\n    },\n    use12: {\n      type: Boolean,\n      default: function _default() {\n        return config.use12;\n      }\n    },\n    showTimeMarker: {\n      type: Boolean,\n      default: function _default() {\n        return config.showTimeMarker;\n      }\n    },\n    eventDisplay: {\n      type: [String, Function],\n      default: function _default() {\n        return config.eventDisplay;\n      }\n    },\n    disableDialog: {\n      type: Boolean,\n      default: false\n    },\n    eventDialogConfig: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    return {\n      today: moment(),\n      activeView: '',\n      activeDate: null\n    };\n  },\n  mounted: function mounted() {\n    //  Initial setup\n    this.activeView = this.initialView;\n    this.activeDate = moment(this.initialDate);\n    console.log('mounted'); //  Bind events\n\n    this.bindEvents();\n  },\n  beforeDestroy: function beforeDestroy() {\n    EventBus.$off('day-clicked');\n    EventBus.$off('time-clicked');\n    EventBus.$off('event-clicked');\n  },\n  methods: {\n    openEventDialog: function openEventDialog(data) {\n      var _this = this;\n\n      if (!this.disableDialog) {\n        var _this$eventDialogConf = this.eventDialogConfig,\n            fields = _this$eventDialogConf.fields,\n            _config = _objectWithoutProperties(_this$eventDialogConf, [\"fields\"]);\n\n        if (data instanceof Date) {\n          _config.date = data;\n        } else {\n          _config.date = data.date;\n          _config.startTime = data.time !== null ? moment(data.time, 'HH') : null;\n          _config.endTime = data.time !== null ? moment(data.time, 'HH').add(1, 'h') : null;\n        }\n\n        EventDialog.show(_config, fields).$on('event-created', function (event) {\n          _this.events.push(event._e);\n\n          _this.$emit('event-created', event._e);\n        }); // EventDialog.show({\n        //     title: 'Custom dialog',\n        //     createButtonLabel: 'Save'\n        // }, [\n        //     // {\n        //     //     name: 'text_field',\n        //     //     label: 'Text field'\n        //     // },\n        //     // {\n        //     //     name: 'email',\n        //     //     type: 'email'\n        //     // },\n        //     // {\n        //     //     name: 'password',\n        //     //     type: 'password'\n        //     // },\n        //     // {\n        //     //     name: 'is_checked',\n        //     //     type: 'checkbox'    //  Unsupported for now\n        //     // },\n        //     // {\n        //     //     name: 'check_choices[]',\n        //     //     type: 'checkbox',           //  Unsupported for now\n        //     //     choices: [\n        //     //         { label: 'Choice 1', value: 'choice1' },\n        //     //         { label: 'Choice 2', value: 'choice2' }\n        //     //     ]\n        //     // },\n        //     // {\n        //     //     name: 'radio_choices',\n        //     //     type: 'radio',                //  Unsupported for now\n        //     //     choices: [\n        //     //         { label: 'Radio 1', value: 'rad1' },\n        //     //         { label: 'Radio 2', value: 'rad2' }\n        //     //     ]\n        //     // },\n        //     // {\n        //     //     name: 'textarea',\n        //     //     type: 'textarea'\n        //     // }\n        //     {\n        //         name: 'single-select',\n        //         type: 'select',                                              //  Unsupported for now\n        //         choices: [\n        //             { value: 'single1', label: 'Single list 1' },\n        //             { value: 'single2', label: 'Single list 2' },\n        //             { value: 'single3', label: 'Single list 3' },\n        //             { value: 'single4', label: 'Single list 4' },\n        //             { value: 'single5', label: 'Single list 5' }\n        //         ]\n        //     },\n        //     {\n        //         name: 'multiple-select',\n        //         type: 'select',                                                  //  Unsupported for now\n        //         choices: [\n        //             { value: 'multiple1', label: 'Multiple list 1' },\n        //             { value: 'multiple2', label: 'Multiple list 2' },\n        //             { value: 'multiple3', label: 'Multiple list 3' },\n        //             { value: 'multiple4', label: 'Multiple list 4' },\n        //             { value: 'multiple5', label: 'Multiple list 5' }\n        //         ],\n        //         multiple: true\n        //     }\n        // ]);\n      }\n    },\n    bindEvents: function bindEvents() {\n      var _this2 = this;\n\n      EventBus.$on('day-clicked', function (date) {\n        _this2.$emit('day-clicked', date);\n\n        _this2.openEventDialog(date);\n      });\n      EventBus.$on('time-clicked', function (data) {\n        _this2.$emit('time-clicked', data);\n\n        _this2.openEventDialog(data);\n      });\n      EventBus.$on('event-clicked', function (event) {\n        _this2.$emit('event-clicked', event._e);\n      });\n    },\n    goToToday: function goToToday() {\n      this.activeDate = moment(this.today);\n    },\n    prev: function prev() {\n      this.activeDate = moment(this.activeDate.subtract(1, this.activeView + 's'));\n    },\n    next: function next() {\n      this.activeDate = moment(this.activeDate.add(1, this.activeView + 's'));\n    },\n    switchView: function switchView(view) {\n      this.activeView = view;\n    }\n  },\n  filters: {\n    capitalizeFirstLetter: function capitalizeFirstLetter(string) {\n      return string ? string.charAt(0).toUpperCase() + string.slice(1) : '';\n    }\n  },\n  watch: {\n    initialDate: function initialDate() {\n      this.activeDate = moment(this.initialDate);\n    },\n    initialView: function initialView() {\n      this.activeView = this.initialView;\n    },\n    activeDate: function activeDate() {\n      this.$emit(this.activeView + '-changed', this.activeDate.toDate());\n    },\n    activeView: function activeView() {\n      this.$emit('view-changed', this.activeView);\n    }\n  },\n  computed: {\n    newEvents: function newEvents() {\n      var _this3 = this;\n\n      return this.events.map(function (e) {\n        return new Event(e).bindGetter('displayText', _this3.eventDisplay);\n      });\n    },\n    isPrevAllowed: function isPrevAllowed() {\n      if (this.minDate) {\n        var prevRef = moment(this.activeDate).subtract(1, this.activeView + 's');\n        return this.minDate.isSameOrBefore(prevRef, this.activeView);\n      }\n\n      return true;\n    },\n    isNextAllowed: function isNextAllowed() {\n      if (this.maxDate) {\n        var afterRef = moment(this.activeDate).add(1, this.activeView + 's');\n        return this.maxDate.isSameOrAfter(afterRef, this.activeView);\n      }\n\n      return true;\n    },\n    activeViewProps: function activeViewProps() {\n      var _this4 = this;\n\n      var props = {\n        activeDate: this.activeDate,\n        minDate: this.minDate,\n        maxDate: this.maxDate,\n        use12: this.use12,\n        events: this.newEvents.filter(function (event) {\n          return event.date.isSame(_this4.activeDate, _this4.activeView);\n        })\n      };\n\n      if (this.activeView === 'week' || this.activeView === 'day') {\n        props.allDayLabel = this.labels.all_day;\n        props.timeRange = this.timeRange;\n        props.showTimeMarker = this.showTimeMarker;\n      }\n\n      return props;\n    },\n    calendarTitle: function calendarTitle() {\n      if (this.activeDate === null) return '';\n\n      if (this.activeView === 'month') {\n        return this.activeDate.format('MMMM YYYY');\n      }\n\n      if (this.activeView === 'week') {\n        var weekStart = moment(this.activeDate).day(0);\n        var weekEnd = moment(this.activeDate).day(6);\n        return weekStart.format('MMM D') + ' - ' + weekEnd.format('MMM D');\n      }\n\n      if (this.activeView === 'day') {\n        return this.activeDate.format('dddd MMM D');\n      }\n    }\n  }\n};",{"version":3,"sources":["VueScheduler.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,OAAA,KAAA;AAGA,OAAA,MAAA;AACA,SAAA,aAAA,EAAA,YAAA;AAEA,SAAA,QAAA;AAEA,OAAA,MAAA,MAAA,QAAA;AACA,OAAA,KAAA;AACA,OAAA,IAAA;AACA,OAAA,GAAA;AAEA,OAAA,WAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,KAAA,EAAA,KAAA;AAAA,IAAA,IAAA,EAAA,IAAA;AAAA,IAAA,GAAA,EAAA;AAAA,GAFA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA,KADA;AAKA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,MAAA,CAAA,eAAA;AAAA;AAFA,KALA;AASA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,IAAA,EAAA,MAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,MAAA,CAAA,OAAA;AAAA;AAFA,KATA;AAaA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,IAAA,EAAA,MAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,MAAA,CAAA,OAAA;AAAA;AAFA,KAbA;AAiBA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,MAAA,CAAA,MAAA;AAAA,OAFA;AAGA,MAAA,SAHA,qBAGA,KAHA,EAGA;AACA,aAAA,IAAA,QAAA,IAAA,aAAA,EAAA;AACA,cAAA,CAAA,KAAA,CAAA,cAAA,CAAA,QAAA,CAAA,EAAA;AACA,YAAA,OAAA,CAAA,KAAA,CAAA,yBAAA,QAAA;AACA,mBAAA,KAAA;AACA;AACA;;AACA,eAAA,IAAA;AACA;AAXA,KAjBA;AA8BA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,MAAA,CAAA,SAAA;AAAA,OAFA;AAGA,MAAA,SAHA,qBAGA,KAHA,EAGA;AACA,YAAA,KAAA,CAAA,MAAA,KAAA,CAAA,IAAA,KAAA,CAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,CAAA,GAAA,CAAA,IAAA,KAAA,CAAA,CAAA,CAAA,GAAA,EAAA,EAAA;AACA,UAAA,OAAA,CAAA,KAAA,CAAA,qBAAA;AACA,iBAAA,KAAA;AACA;;AACA,eAAA,IAAA;AACA;AATA,KA9BA;AAyCA,IAAA,cAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,MAAA,CAAA,cAAA;AAAA,OAFA;AAGA,MAAA,SAHA,qBAGA,KAHA,EAGA;AACA,YAAA,QAAA,GAAA,YAAA;AACA,YAAA,KAAA,GAAA,KAAA;AACA,QAAA,KAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,cAAA,QAAA,CAAA,OAAA,CAAA,IAAA,MAAA,CAAA,CAAA,EAAA;AACA,YAAA,OAAA,CAAA,KAAA,CAAA,mBAAA,IAAA;AACA,YAAA,KAAA,GAAA,IAAA;AACA;AACA,SALA;AAMA,eAAA,CAAA,KAAA;AACA;AAbA,KAzCA;AAwDA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,IAAA,EAAA,MAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,MAAA,CAAA,WAAA;AAAA;AAFA,KAxDA;AA4DA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,MAAA,CAAA,WAAA;AAAA;AAFA,KA5DA;AAgEA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,MAAA,CAAA,KAAA;AAAA;AAFA,KAhEA;AAoEA,IAAA,cAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,MAAA,CAAA,cAAA;AAAA;AAFA,KApEA;AAwEA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,QAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,MAAA,CAAA,YAAA;AAAA;AAFA,KAxEA;AA4EA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KA5EA;AAgFA,IAAA,iBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AAAA,eAAA,EAAA;AAAA;AAFA;AAhFA,GAHA;AAwFA,EAAA,IAxFA,kBAwFA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,MAAA,EADA;AAEA,MAAA,UAAA,EAAA,EAFA;AAGA,MAAA,UAAA,EAAA;AAHA,KAAA;AAKA,GA9FA;AA+FA,EAAA,OA/FA,qBA+FA;AACA;AACA,SAAA,UAAA,GAAA,KAAA,WAAA;AACA,SAAA,UAAA,GAAA,MAAA,CAAA,KAAA,WAAA,CAAA;AAEA,IAAA,OAAA,CAAA,GAAA,CAAA,SAAA,EALA,CAOA;;AACA,SAAA,UAAA;AACA,GAxGA;AAyGA,EAAA,aAzGA,2BAyGA;AACA,IAAA,QAAA,CAAA,IAAA,CAAA,aAAA;AACA,IAAA,QAAA,CAAA,IAAA,CAAA,cAAA;AACA,IAAA,QAAA,CAAA,IAAA,CAAA,eAAA;AACA,GA7GA;AA8GA,EAAA,OAAA,EAAA;AACA,IAAA,eADA,2BACA,IADA,EACA;AAAA;;AACA,UAAA,CAAA,KAAA,aAAA,EAAA;AAAA,oCAEA,KAAA,iBAFA;AAAA,YAEA,MAFA,yBAEA,MAFA;AAAA,YAEA,OAFA;;AAIA,YAAA,IAAA,YAAA,IAAA,EAAA;AACA,UAAA,OAAA,CAAA,IAAA,GAAA,IAAA;AACA,SAFA,MAEA;AACA,UAAA,OAAA,CAAA,IAAA,GAAA,IAAA,CAAA,IAAA;AACA,UAAA,OAAA,CAAA,SAAA,GAAA,IAAA,CAAA,IAAA,KAAA,IAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,IAAA,CAAA,GAAA,IAAA;AACA,UAAA,OAAA,CAAA,OAAA,GAAA,IAAA,CAAA,IAAA,KAAA,IAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA,GAAA,CAAA,CAAA,EAAA,GAAA,CAAA,GAAA,IAAA;AACA;;AAEA,QAAA,WAAA,CAAA,IAAA,CAAA,OAAA,EAAA,MAAA,EACA,GADA,CACA,eADA,EACA,UAAA,KAAA,EAAA;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,EAAA;;AACA,UAAA,KAAA,CAAA,KAAA,CAAA,eAAA,EAAA,KAAA,CAAA,EAAA;AACA,SAJA,EAZA,CAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KArFA;AAsFA,IAAA,UAtFA,wBAsFA;AAAA;;AACA,MAAA,QAAA,CAAA,GAAA,CAAA,aAAA,EAAA,UAAA,IAAA,EAAA;AACA,QAAA,MAAA,CAAA,KAAA,CAAA,aAAA,EAAA,IAAA;;AACA,QAAA,MAAA,CAAA,eAAA,CAAA,IAAA;AACA,OAHA;AAIA,MAAA,QAAA,CAAA,GAAA,CAAA,cAAA,EAAA,UAAA,IAAA,EAAA;AACA,QAAA,MAAA,CAAA,KAAA,CAAA,cAAA,EAAA,IAAA;;AACA,QAAA,MAAA,CAAA,eAAA,CAAA,IAAA;AACA,OAHA;AAIA,MAAA,QAAA,CAAA,GAAA,CAAA,eAAA,EAAA,UAAA,KAAA,EAAA;AACA,QAAA,MAAA,CAAA,KAAA,CAAA,eAAA,EAAA,KAAA,CAAA,EAAA;AACA,OAFA;AAGA,KAlGA;AAmGA,IAAA,SAnGA,uBAmGA;AACA,WAAA,UAAA,GAAA,MAAA,CAAA,KAAA,KAAA,CAAA;AACA,KArGA;AAsGA,IAAA,IAtGA,kBAsGA;AACA,WAAA,UAAA,GAAA,MAAA,CAAA,KAAA,UAAA,CAAA,QAAA,CAAA,CAAA,EAAA,KAAA,UAAA,GAAA,GAAA,CAAA,CAAA;AACA,KAxGA;AAyGA,IAAA,IAzGA,kBAyGA;AACA,WAAA,UAAA,GAAA,MAAA,CAAA,KAAA,UAAA,CAAA,GAAA,CAAA,CAAA,EAAA,KAAA,UAAA,GAAA,GAAA,CAAA,CAAA;AACA,KA3GA;AA4GA,IAAA,UA5GA,sBA4GA,IA5GA,EA4GA;AACA,WAAA,UAAA,GAAA,IAAA;AACA;AA9GA,GA9GA;AA8NA,EAAA,OAAA,EAAA;AACA,IAAA,qBADA,iCACA,MADA,EACA;AACA,aAAA,MAAA,GAAA,MAAA,CAAA,MAAA,CAAA,CAAA,EAAA,WAAA,KAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA,GAAA,EAAA;AACA;AAHA,GA9NA;AAmOA,EAAA,KAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,WAAA,UAAA,GAAA,MAAA,CAAA,KAAA,WAAA,CAAA;AACA,KAHA;AAIA,IAAA,WAJA,yBAIA;AACA,WAAA,UAAA,GAAA,KAAA,WAAA;AACA,KANA;AAOA,IAAA,UAPA,wBAOA;AACA,WAAA,KAAA,CAAA,KAAA,UAAA,GAAA,UAAA,EAAA,KAAA,UAAA,CAAA,MAAA,EAAA;AACA,KATA;AAUA,IAAA,UAVA,wBAUA;AACA,WAAA,KAAA,CAAA,cAAA,EAAA,KAAA,UAAA;AACA;AAZA,GAnOA;AAiPA,EAAA,QAAA,EAAA;AACA,IAAA,SADA,uBACA;AAAA;;AACA,aAAA,KAAA,MAAA,CAAA,GAAA,CAAA,UAAA,CAAA,EAAA;AACA,eAAA,IAAA,KAAA,CAAA,CAAA,EAAA,UAAA,CAAA,aAAA,EAAA,MAAA,CAAA,YAAA,CAAA;AACA,OAFA,CAAA;AAGA,KALA;AAMA,IAAA,aANA,2BAMA;AACA,UAAA,KAAA,OAAA,EAAA;AACA,YAAA,OAAA,GAAA,MAAA,CAAA,KAAA,UAAA,CAAA,CAAA,QAAA,CAAA,CAAA,EAAA,KAAA,UAAA,GAAA,GAAA,CAAA;AACA,eAAA,KAAA,OAAA,CAAA,cAAA,CAAA,OAAA,EAAA,KAAA,UAAA,CAAA;AACA;;AACA,aAAA,IAAA;AACA,KAZA;AAaA,IAAA,aAbA,2BAaA;AACA,UAAA,KAAA,OAAA,EAAA;AACA,YAAA,QAAA,GAAA,MAAA,CAAA,KAAA,UAAA,CAAA,CAAA,GAAA,CAAA,CAAA,EAAA,KAAA,UAAA,GAAA,GAAA,CAAA;AACA,eAAA,KAAA,OAAA,CAAA,aAAA,CAAA,QAAA,EAAA,KAAA,UAAA,CAAA;AACA;;AACA,aAAA,IAAA;AACA,KAnBA;AAoBA,IAAA,eApBA,6BAoBA;AAAA;;AACA,UAAA,KAAA,GAAA;AACA,QAAA,UAAA,EAAA,KAAA,UADA;AAEA,QAAA,OAAA,EAAA,KAAA,OAFA;AAGA,QAAA,OAAA,EAAA,KAAA,OAHA;AAIA,QAAA,KAAA,EAAA,KAAA,KAJA;AAKA,QAAA,MAAA,EAAA,KAAA,SAAA,CAAA,MAAA,CAAA,UAAA,KAAA,EAAA;AACA,iBAAA,KAAA,CAAA,IAAA,CAAA,MAAA,CAAA,MAAA,CAAA,UAAA,EAAA,MAAA,CAAA,UAAA,CAAA;AACA,SAFA;AALA,OAAA;;AAUA,UAAA,KAAA,UAAA,KAAA,MAAA,IAAA,KAAA,UAAA,KAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,WAAA,GAAA,KAAA,MAAA,CAAA,OAAA;AACA,QAAA,KAAA,CAAA,SAAA,GAAA,KAAA,SAAA;AACA,QAAA,KAAA,CAAA,cAAA,GAAA,KAAA,cAAA;AACA;;AACA,aAAA,KAAA;AACA,KArCA;AAsCA,IAAA,aAtCA,2BAsCA;AAEA,UAAA,KAAA,UAAA,KAAA,IAAA,EACA,OAAA,EAAA;;AAEA,UAAA,KAAA,UAAA,KAAA,OAAA,EAAA;AACA,eAAA,KAAA,UAAA,CAAA,MAAA,CAAA,WAAA,CAAA;AACA;;AAEA,UAAA,KAAA,UAAA,KAAA,MAAA,EAAA;AACA,YAAA,SAAA,GAAA,MAAA,CAAA,KAAA,UAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA;AACA,YAAA,OAAA,GAAA,MAAA,CAAA,KAAA,UAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA;AACA,eAAA,SAAA,CAAA,MAAA,CAAA,OAAA,IAAA,KAAA,GAAA,OAAA,CAAA,MAAA,CAAA,OAAA,CAAA;AACA;;AAEA,UAAA,KAAA,UAAA,KAAA,KAAA,EAAA;AACA,eAAA,KAAA,UAAA,CAAA,MAAA,CAAA,YAAA,CAAA;AACA;AACA;AAxDA;AAjPA,CAAA","sourcesContent":["<template>\r\n  <div class=\"v-cal\">\r\n    <header class=\"v-cal-header\">\r\n      <div class=\"v-cal-header__actions\">\r\n        <div class=\"actions-left\">\r\n          <button class=\"v-cal-button\" v-if=\"showTodayButton\" @click=\"goToToday\" :class=\"{ 'v-cal-button--is-active': activeDate && activeDate.isSame( today, 'day' )}\">{{ labels.today }}</button>\r\n          <button :disabled=\"!isPrevAllowed\" class=\"v-cal-button\" @click=\"prev\" v-html=\"labels.back\"></button>\r\n          <button :disabled=\"!isNextAllowed\" class=\"v-cal-button\" @click=\"next\" v-html=\"labels.next\"></button>\r\n        </div>\r\n        <div class=\"actions-right\">\r\n          <button class=\"v-cal-button\" v-for=\"view in availableViews\" @click=\"switchView(view)\" :class=\"{ 'v-cal-button--is-active': activeView === view }\" >{{ labels[view] | capitalizeFirstLetter }}</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"v-cal-header__title-bar\">\r\n        <h3 class=\"v-cal-header__title\">{{ calendarTitle }}</h3>\r\n      </div>\r\n    </header>\r\n    <component\r\n            :is=\"activeView\"\r\n            :class=\"'v-cal-content--' + activeView\"\r\n            v-bind=\"activeViewProps\"\r\n    ></component>\r\n    <footer class=\"v-cal-footer\"></footer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    import Event from '../model/Event';\r\n\r\n\r\n    import config from '../utils/config';\r\n    import { defaultLabels, defaultViews } from '../utils/config';\r\n\r\n    import { EventBus } from './EventBus';\r\n\r\n    import moment from 'moment';\r\n    import Month from './views/Month';\r\n    import Week from './views/Week';\r\n    import Day from './views/Day';\r\n\r\n    import EventDialog from './dialog';\r\n\r\n    export default {\r\n        name: \"VueScheduler\",\r\n        components: { Month, Week, Day },\r\n        props: {\r\n            events: {\r\n                type: Array,\r\n                default: () => []\r\n            },\r\n            showTodayButton: {\r\n                type: Boolean,\r\n                default: () => config.showTodayButton\r\n            },\r\n            minDate: {\r\n                type: [Date, Object],\r\n                default: () => config.minDate\r\n            },\r\n            maxDate: {\r\n                type: [Date, Object],\r\n                default: () => config.maxDate\r\n            },\r\n            labels: {\r\n                type: Object,\r\n                default: () => config.labels,\r\n                validator(value) {\r\n                    for (const labelKey in defaultLabels ) {\r\n                        if ( !value.hasOwnProperty(labelKey) ) {\r\n                            console.error('Missing prop label: ' + labelKey);\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                }\r\n            },\r\n            timeRange: {\r\n                type: Array,\r\n                default: () => config.timeRange,\r\n                validator(value) {\r\n                    if ( value.length !== 2 || value[0] > value[1] || value[0] < 0 || value[1] > 23) {\r\n                        console.error('Invalid time range.');\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                }\r\n            },\r\n            availableViews: {\r\n                type: Array,\r\n                default: () => config.availableViews,\r\n                validator (value) {\r\n                    const possible = defaultViews;\r\n                    let error = false;\r\n                    value.forEach(view => {\r\n                        if ( possible.indexOf(view) === -1 ) {\r\n                            console.error('Invalid view: ' + view);\r\n                            error = true;\r\n                        }\r\n                    });\r\n                    return !error;\r\n                }\r\n            },\r\n            initialDate: {\r\n                type: [Date, Object],\r\n                default: () => config.initialDate\r\n            },\r\n            initialView: {\r\n                type: String,\r\n                default: () => config.initialView\r\n            },\r\n            use12: {\r\n                type: Boolean,\r\n                default: () => config.use12\r\n            },\r\n            showTimeMarker: {\r\n                type: Boolean,\r\n                default: () => config.showTimeMarker\r\n            },\r\n            eventDisplay: {\r\n                type: [String, Function],\r\n                default: () => config.eventDisplay\r\n            },\r\n            disableDialog: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            eventDialogConfig: {\r\n                type: Object,\r\n                default: () => { return {} }\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                today: moment(),\r\n                activeView: '',\r\n                activeDate: null\r\n            }\r\n        },\r\n        mounted() {\r\n            //  Initial setup\r\n            this.activeView = this.initialView;\r\n            this.activeDate = moment(this.initialDate);\r\n\r\n            console.log('mounted');\r\n\r\n            //  Bind events\r\n            this.bindEvents();\r\n        },\r\n        beforeDestroy() {\r\n            EventBus.$off('day-clicked');\r\n            EventBus.$off('time-clicked');\r\n            EventBus.$off('event-clicked');\r\n        },\r\n        methods: {\r\n            openEventDialog(data) {\r\n                if ( !this.disableDialog ) {\r\n\r\n                    const { fields, ...config } = this.eventDialogConfig;\r\n\r\n                    if ( data instanceof Date ) {\r\n                        config.date = data\r\n                    } else {\r\n                        config.date = data.date;\r\n                        config.startTime = data.time !== null ? moment(data.time, 'HH') : null;\r\n                        config.endTime = data.time !== null ? moment(data.time, 'HH').add(1, 'h') : null;\r\n                    }\r\n\r\n                    EventDialog.show(config, fields)\r\n                        .$on('event-created', (event) => {\r\n                            this.events.push(event._e);\r\n                            this.$emit('event-created', event._e);\r\n                        });\r\n\r\n                    // EventDialog.show({\r\n                    //     title: 'Custom dialog',\r\n                    //     createButtonLabel: 'Save'\r\n                    // }, [\r\n                    //     // {\r\n                    //     //     name: 'text_field',\r\n                    //     //     label: 'Text field'\r\n                    //     // },\r\n                    //     // {\r\n                    //     //     name: 'email',\r\n                    //     //     type: 'email'\r\n                    //     // },\r\n                    //     // {\r\n                    //     //     name: 'password',\r\n                    //     //     type: 'password'\r\n                    //     // },\r\n                    //     // {\r\n                    //     //     name: 'is_checked',\r\n                    //     //     type: 'checkbox'    //  Unsupported for now\r\n                    //     // },\r\n                    //     // {\r\n                    //     //     name: 'check_choices[]',\r\n                    //     //     type: 'checkbox',           //  Unsupported for now\r\n                    //     //     choices: [\r\n                    //     //         { label: 'Choice 1', value: 'choice1' },\r\n                    //     //         { label: 'Choice 2', value: 'choice2' }\r\n                    //     //     ]\r\n                    //     // },\r\n                    //     // {\r\n                    //     //     name: 'radio_choices',\r\n                    //     //     type: 'radio',                //  Unsupported for now\r\n                    //     //     choices: [\r\n                    //     //         { label: 'Radio 1', value: 'rad1' },\r\n                    //     //         { label: 'Radio 2', value: 'rad2' }\r\n                    //     //     ]\r\n                    //     // },\r\n                    //     // {\r\n                    //     //     name: 'textarea',\r\n                    //     //     type: 'textarea'\r\n                    //     // }\r\n                    //     {\r\n                    //         name: 'single-select',\r\n                    //         type: 'select',                                              //  Unsupported for now\r\n                    //         choices: [\r\n                    //             { value: 'single1', label: 'Single list 1' },\r\n                    //             { value: 'single2', label: 'Single list 2' },\r\n                    //             { value: 'single3', label: 'Single list 3' },\r\n                    //             { value: 'single4', label: 'Single list 4' },\r\n                    //             { value: 'single5', label: 'Single list 5' }\r\n                    //         ]\r\n                    //     },\r\n                    //     {\r\n                    //         name: 'multiple-select',\r\n                    //         type: 'select',                                                  //  Unsupported for now\r\n                    //         choices: [\r\n                    //             { value: 'multiple1', label: 'Multiple list 1' },\r\n                    //             { value: 'multiple2', label: 'Multiple list 2' },\r\n                    //             { value: 'multiple3', label: 'Multiple list 3' },\r\n                    //             { value: 'multiple4', label: 'Multiple list 4' },\r\n                    //             { value: 'multiple5', label: 'Multiple list 5' }\r\n                    //         ],\r\n                    //         multiple: true\r\n                    //     }\r\n                    // ]);\r\n                }\r\n            },\r\n            bindEvents() {\r\n                EventBus.$on('day-clicked', (date) => {\r\n                    this.$emit('day-clicked', date);\r\n                    this.openEventDialog(date);\r\n                });\r\n                EventBus.$on('time-clicked', (data) => {\r\n                    this.$emit('time-clicked', data);\r\n                    this.openEventDialog(data);\r\n                });\r\n                EventBus.$on('event-clicked', (event) => {\r\n                    this.$emit('event-clicked', event._e);\r\n                });\r\n            },\r\n            goToToday() {\r\n                this.activeDate = moment(this.today);\r\n            },\r\n            prev() {\r\n                this.activeDate = moment(this.activeDate.subtract(1, this.activeView + 's'));\r\n            },\r\n            next() {\r\n                this.activeDate = moment(this.activeDate.add(1, this.activeView + 's'));\r\n            },\r\n            switchView(view) {\r\n                this.activeView = view;\r\n            },\r\n        },\r\n        filters: {\r\n            capitalizeFirstLetter(string) {\r\n                return string ? string.charAt(0).toUpperCase() + string.slice(1) : '';\r\n            }\r\n        },\r\n        watch: {\r\n            initialDate() {\r\n                this.activeDate = moment(this.initialDate);\r\n            },\r\n            initialView() {\r\n                this.activeView = this.initialView;\r\n            },\r\n            activeDate() {\r\n                this.$emit(this.activeView + '-changed', this.activeDate.toDate() );\r\n            },\r\n            activeView() {\r\n                this.$emit('view-changed', this.activeView);\r\n            }\r\n        },\r\n        computed: {\r\n            newEvents() {\r\n                return this.events.map(e => {\r\n                    return new Event(e).bindGetter('displayText', this.eventDisplay);\r\n                });\r\n            },\r\n            isPrevAllowed() {\r\n                if ( this.minDate ) {\r\n                    const prevRef = moment(this.activeDate).subtract(1, this.activeView + 's');\r\n                    return this.minDate.isSameOrBefore(prevRef, this.activeView);\r\n                }\r\n                return true\r\n            },\r\n            isNextAllowed() {\r\n                if ( this.maxDate ) {\r\n                    const afterRef = moment(this.activeDate).add(1, this.activeView + 's');\r\n                    return this.maxDate.isSameOrAfter(afterRef, this.activeView);\r\n                }\r\n                return true\r\n            },\r\n            activeViewProps() {\r\n                let props = {\r\n                    activeDate: this.activeDate,\r\n                    minDate: this.minDate,\r\n                    maxDate: this.maxDate,\r\n                    use12: this.use12,\r\n                    events: this.newEvents.filter( event => {\r\n                        return event.date.isSame(this.activeDate, this.activeView);\r\n                    })\r\n                };\r\n\r\n                if ( this.activeView === 'week' || this.activeView === 'day') {\r\n                    props.allDayLabel = this.labels.all_day;\r\n                    props.timeRange = this.timeRange;\r\n                    props.showTimeMarker = this.showTimeMarker;\r\n                }\r\n                return props;\r\n            },\r\n            calendarTitle() {\r\n\r\n                if ( this.activeDate === null )\r\n                    return '';\r\n\r\n                if ( this.activeView === 'month') {\r\n                    return this.activeDate.format('MMMM YYYY');\r\n                }\r\n\r\n                if ( this.activeView === 'week' ) {\r\n                    const weekStart = moment(this.activeDate).day(0);\r\n                    const weekEnd = moment(this.activeDate).day(6);\r\n                    return weekStart.format('MMM D') + ' - ' + weekEnd.format('MMM D');\r\n                }\r\n\r\n                if ( this.activeView === 'day' ) {\r\n                    return this.activeDate.format('dddd MMM D')\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"../../../node_modules/v-calendar-scheduler/components"}]}