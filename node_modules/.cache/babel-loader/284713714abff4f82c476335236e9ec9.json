{"remainingRequest":"/Users/lorenz/Documents/code/parley/node_modules/babel-loader/lib/index.js!/Users/lorenz/Documents/code/parley/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lorenz/Documents/code/parley/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lorenz/node_modules/v-calendar-scheduler/components/dialog/EventDialogInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lorenz/node_modules/v-calendar-scheduler/components/dialog/EventDialogInput.vue","mtime":1529439629000},{"path":"/Users/lorenz/Documents/code/parley/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lorenz/Documents/code/parley/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lorenz/Documents/code/parley/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lorenz/Documents/code/parley/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from 'moment';\nexport default {\n  name: \"EventDialogInput\",\n  props: {\n    value: [Date, String, Number, Boolean, Array, Object],\n    field: {\n      type: Object,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      newValue: this.value\n    };\n  },\n  beforeMount: function beforeMount() {\n    //  Date workaround\n    if (this.field.type === 'date' && this.value) {\n      this.newValue = moment(this.value).format().slice(0, 10);\n    } //  Time workaround\n\n\n    if (this.field.type === 'time' && this.value) {\n      this.newValue = moment(this.value).format().slice(11, 16);\n    }\n  },\n  methods: {\n    onInput: function onInput(event) {\n      var _this = this;\n\n      this.$nextTick(function () {\n        _this.newValue = event.target.value;\n      });\n    }\n  },\n  watch: {\n    value: function value(_value) {\n      this.newValue = _value;\n    },\n    newValue: function newValue(value) {\n      var res = value;\n\n      if (this.field.type === 'time') {\n        res = moment(this.newValue, \"HH:mm\");\n      }\n\n      this.$emit('input', res);\n    }\n  },\n  computed: {\n    isCheckOrRadio: function isCheckOrRadio() {\n      return this.field.type === 'radio' || this.field.type === 'checkbox';\n    },\n    fieldLabel: function fieldLabel() {\n      return this.field.label ? this.field.label : this.field.name;\n    },\n    fieldClass: function fieldClass() {\n      if (this.overrideInputClass) return this.inputClass;\n      var classes = ['v-cal-input', this.inputClass];\n\n      if (this.isCheckOrRadio) {\n        if (!this.field.choices) {\n          classes.push('is-inline');\n          classes.push('is-' + this.field.type);\n        } else {\n          classes.push('v-cal-input-group');\n        }\n      }\n\n      return classes.join(' ');\n    }\n  }\n};",{"version":3,"sources":["EventDialogInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,OAAA,MAAA,MAAA,QAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,kBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA,CAAA,IAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,KAAA,EAAA,MAAA,CADA;AAEA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AAFA,GAFA;AASA,EAAA,IATA,kBASA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,KAAA;AADA,KAAA;AAGA,GAbA;AAcA,EAAA,WAdA,yBAcA;AACA;AACA,QAAA,KAAA,KAAA,CAAA,IAAA,KAAA,MAAA,IAAA,KAAA,KAAA,EAAA;AACA,WAAA,QAAA,GAAA,MAAA,CAAA,KAAA,KAAA,CAAA,CAAA,MAAA,GAAA,KAAA,CAAA,CAAA,EAAA,EAAA,CAAA;AACA,KAJA,CAMA;;;AACA,QAAA,KAAA,KAAA,CAAA,IAAA,KAAA,MAAA,IAAA,KAAA,KAAA,EAAA;AACA,WAAA,QAAA,GAAA,MAAA,CAAA,KAAA,KAAA,CAAA,CAAA,MAAA,GAAA,KAAA,CAAA,EAAA,EAAA,EAAA,CAAA;AACA;AACA,GAxBA;AAyBA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,mBACA,KADA,EACA;AAAA;;AACA,WAAA,SAAA,CAAA,YAAA;AACA,QAAA,KAAA,CAAA,QAAA,GAAA,KAAA,CAAA,MAAA,CAAA,KAAA;AACA,OAFA;AAGA;AALA,GAzBA;AAgCA,EAAA,KAAA,EAAA;AACA,IAAA,KADA,iBACA,MADA,EACA;AACA,WAAA,QAAA,GAAA,MAAA;AACA,KAHA;AAIA,IAAA,QAJA,oBAIA,KAJA,EAIA;AACA,UAAA,GAAA,GAAA,KAAA;;AAEA,UAAA,KAAA,KAAA,CAAA,IAAA,KAAA,MAAA,EAAA;AACA,QAAA,GAAA,GAAA,MAAA,CAAA,KAAA,QAAA,EAAA,OAAA,CAAA;AACA;;AAEA,WAAA,KAAA,CAAA,OAAA,EAAA,GAAA;AACA;AAZA,GAhCA;AA8CA,EAAA,QAAA,EAAA;AACA,IAAA,cADA,4BACA;AACA,aAAA,KAAA,KAAA,CAAA,IAAA,KAAA,OAAA,IAAA,KAAA,KAAA,CAAA,IAAA,KAAA,UAAA;AACA,KAHA;AAIA,IAAA,UAJA,wBAIA;AACA,aAAA,KAAA,KAAA,CAAA,KAAA,GAAA,KAAA,KAAA,CAAA,KAAA,GAAA,KAAA,KAAA,CAAA,IAAA;AACA,KANA;AAOA,IAAA,UAPA,wBAOA;AACA,UAAA,KAAA,kBAAA,EACA,OAAA,KAAA,UAAA;AAEA,UAAA,OAAA,GAAA,CACA,aADA,EAEA,KAAA,UAFA,CAAA;;AAKA,UAAA,KAAA,cAAA,EAAA;AAEA,YAAA,CAAA,KAAA,KAAA,CAAA,OAAA,EAAA;AACA,UAAA,OAAA,CAAA,IAAA,CAAA,WAAA;AACA,UAAA,OAAA,CAAA,IAAA,CAAA,QAAA,KAAA,KAAA,CAAA,IAAA;AACA,SAHA,MAGA;AACA,UAAA,OAAA,CAAA,IAAA,CAAA,mBAAA;AACA;AACA;;AAEA,aAAA,OAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AACA;AA3BA;AA9CA,CAAA","sourcesContent":["<template>\r\n    <div :class=\"fieldClass\">\r\n        <template v-if=\"field.type === 'textarea'\">\r\n            <label :for=\"field.name\" v-if=\"field.showLabel !== false\">{{ fieldLabel }}</label>\r\n            <textarea\r\n                    @input=\"onInput\"\r\n                    :id=\"field.name\"\r\n                    :name=\"field.name\"\r\n                    :value=\"newValue\"\r\n                    :required=\"field.required\"\r\n                    :placeholder=\"fieldLabel\">\r\n            </textarea>\r\n        </template>\r\n        <template v-else>\r\n            <label :for=\"field.name\" v-if=\"field.showLabel !== false\">{{ fieldLabel }}</label>\r\n            <input\r\n                    @input=\"onInput\"\r\n                    :value=\"newValue\"\r\n                    :placeholder=\"fieldLabel\"\r\n                    :type=\"field.type ? field.type : 'text'\"\r\n                    :required=\"field.required\"\r\n                    :id=\"field.name\">\r\n        </template>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import moment from 'moment';\r\n    export default {\r\n        name: \"EventDialogInput\",\r\n        props: {\r\n            value: [ Date, String, Number, Boolean, Array, Object ],\r\n            field: {\r\n                type: Object,\r\n                required: true\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                newValue: this.value,\r\n            }\r\n        },\r\n        beforeMount() {\r\n            //  Date workaround\r\n            if ( this.field.type === 'date' && this.value ) {\r\n                this.newValue = moment(this.value).format().slice(0, 10);\r\n            }\r\n\r\n            //  Time workaround\r\n            if ( this.field.type === 'time' && this.value ) {\r\n                this.newValue = moment(this.value).format().slice(11, 16);\r\n            }\r\n        },\r\n        methods: {\r\n            onInput(event) {\r\n                this.$nextTick(() => {\r\n                    this.newValue = event.target.value\r\n                });\r\n            }\r\n        },\r\n        watch: {\r\n            value(value) {\r\n                this.newValue = value;\r\n            },\r\n            newValue(value) {\r\n                let res = value;\r\n\r\n                if ( this.field.type === 'time' ) {\r\n                    res = moment(this.newValue, \"HH:mm\");\r\n                }\r\n\r\n                this.$emit('input', res);\r\n            }\r\n        },\r\n        computed: {\r\n            isCheckOrRadio() {\r\n                return this.field.type === 'radio' || this.field.type === 'checkbox';\r\n            },\r\n            fieldLabel() {\r\n                return this.field.label ? this.field.label : this.field.name;\r\n            },\r\n            fieldClass() {\r\n                if ( this.overrideInputClass )\r\n                    return this.inputClass;\r\n\r\n                let classes = [\r\n                    'v-cal-input',\r\n                    this.inputClass\r\n                ];\r\n\r\n                if ( this.isCheckOrRadio ) {\r\n\r\n                    if ( !this.field.choices ) {\r\n                        classes.push('is-inline');\r\n                        classes.push('is-' + this.field.type);\r\n                    } else {\r\n                        classes.push('v-cal-input-group');\r\n                    }\r\n                }\r\n\r\n                return classes.join(' ');\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"../../../node_modules/v-calendar-scheduler/components/dialog"}]}