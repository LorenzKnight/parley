{"remainingRequest":"/Users/lorenz/Documents/code/parley/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lorenz/node_modules/v-calendar-scheduler/components/EventItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lorenz/node_modules/v-calendar-scheduler/components/EventItem.vue","mtime":1527292371000},{"path":"/Users/lorenz/Documents/code/parley/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lorenz/Documents/code/parley/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lorenz/Documents/code/parley/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lorenz/Documents/code/parley/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport moment from 'moment';\nimport { EventBus } from './EventBus';\n\nexport default {\n    name: \"EventItem\",\n    props: {\n        event: {\n            type: Object,\n            required: true\n        },\n        use12: {\n            type: Boolean,\n            required: true\n        },\n        hasDynamicSize: {\n            type: Boolean,\n            default: true\n        }\n    },\n    data() {\n        return {\n            ancestorHeight: 0\n        }\n    },\n    mounted() {\n        if ( this.hasDynamicSize ) {\n            this.getAndSetAncestorHeight();\n            window.addEventListener('resize', this.getAndSetAncestorHeight);\n        }\n    },\n    beforeDestroy() {\n        if ( this.hasDynamicSize )\n            window.removeEventListener('resize', this.getAndSetAncestorHeight);\n    },\n    methods: {\n        eventClicked() {\n            EventBus.$emit('event-clicked', this.event);\n        },\n        getAndSetAncestorHeight() {\n            this.ancestorHeight = this.findAncestor(this.$refs.event_block, 'v-cal-day__hour-content').offsetHeight;\n        },\n        findAncestor (el, cls) {\n            while ((el = el.parentElement) && !el.classList.contains(cls)) ;\n            return el;\n        }\n    },\n    computed: {\n        displayHeight() {\n\n            const end = this.event.endTime.hours() > 0 ? moment(this.event.endTime) : moment(this.event.endTime).add(1, 'days');\n\n            const hours = end.diff(this.event.startTime, 'hours', true);\n            const bordersOffset = hours - 1;\n            return  ( hours * this.ancestorHeight ) + bordersOffset;\n        },\n        eventStyles() {\n\n            let styles = [];\n            styles.push({\n                'backgroundColor': this.event.color,\n                'color': this.event.color,\n            });\n\n            if ( this.hasDynamicSize ) {\n                styles.push({\n                    'height': this.displayHeight + 'px',\n                });\n\n                if ( this.event.overlaps > 0 ) {\n                    const width = 100 / ( this.event.overlaps + 1 );\n                    styles.push({\n                        'width': width + '%',\n                        'left': width + '%'\n                    });\n                }\n\n                if ( this.event.startTime.minutes() > 0 ) {\n                    const distance = ( this.ancestorHeight / 60 ) * this.event.startTime.minutes();\n                    styles.push({\n                        'top': distance + 'px'\n                    });\n                }\n            }\n\n            return styles;\n        },\n        eventClasses() {\n            return {\n                'is-overlapping': this.event.overlaps > 0\n            }\n        }\n    },\n    filters: {\n        formatEventTime(hour, use12 = false) {\n            if ( !hour )\n                return '';\n\n            if ( use12 )\n                return hour.format( hour.minutes() > 0 ? 'h.mma' : 'ha' ).slice(0, -1);\n\n            return hour.format( hour.minutes() > 0 ? 'HH.mm' : 'HH' );\n        }\n    },\n}\n",{"version":3,"sources":["EventItem.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA","file":"EventItem.vue","sourceRoot":"../../../node_modules/v-calendar-scheduler/components","sourcesContent":["<template>\r\n    <div ref=\"event_block\" class=\"v-cal-event-item\"\r\n         :title=\"event.startTime | formatEventTime(use12) + ' - ' + event.displayText\"\r\n         :class=\"eventClasses\"\r\n         @click.stop=\"eventClicked\"\r\n         :style=\"eventStyles\">\r\n        <span class=\"v-cal-event-time\">{{ event.startTime | formatEventTime(use12) }}</span>\r\n        <span class=\"v-cal-event-name\">{{ event.displayText }}</span>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import moment from 'moment';\r\n    import { EventBus } from './EventBus';\r\n\r\n    export default {\r\n        name: \"EventItem\",\r\n        props: {\r\n            event: {\r\n                type: Object,\r\n                required: true\r\n            },\r\n            use12: {\r\n                type: Boolean,\r\n                required: true\r\n            },\r\n            hasDynamicSize: {\r\n                type: Boolean,\r\n                default: true\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                ancestorHeight: 0\r\n            }\r\n        },\r\n        mounted() {\r\n            if ( this.hasDynamicSize ) {\r\n                this.getAndSetAncestorHeight();\r\n                window.addEventListener('resize', this.getAndSetAncestorHeight);\r\n            }\r\n        },\r\n        beforeDestroy() {\r\n            if ( this.hasDynamicSize )\r\n                window.removeEventListener('resize', this.getAndSetAncestorHeight);\r\n        },\r\n        methods: {\r\n            eventClicked() {\r\n                EventBus.$emit('event-clicked', this.event);\r\n            },\r\n            getAndSetAncestorHeight() {\r\n                this.ancestorHeight = this.findAncestor(this.$refs.event_block, 'v-cal-day__hour-content').offsetHeight;\r\n            },\r\n            findAncestor (el, cls) {\r\n                while ((el = el.parentElement) && !el.classList.contains(cls)) ;\r\n                return el;\r\n            }\r\n        },\r\n        computed: {\r\n            displayHeight() {\r\n\r\n                const end = this.event.endTime.hours() > 0 ? moment(this.event.endTime) : moment(this.event.endTime).add(1, 'days');\r\n\r\n                const hours = end.diff(this.event.startTime, 'hours', true);\r\n                const bordersOffset = hours - 1;\r\n                return  ( hours * this.ancestorHeight ) + bordersOffset;\r\n            },\r\n            eventStyles() {\r\n\r\n                let styles = [];\r\n                styles.push({\r\n                    'backgroundColor': this.event.color,\r\n                    'color': this.event.color,\r\n                });\r\n\r\n                if ( this.hasDynamicSize ) {\r\n                    styles.push({\r\n                        'height': this.displayHeight + 'px',\r\n                    });\r\n\r\n                    if ( this.event.overlaps > 0 ) {\r\n                        const width = 100 / ( this.event.overlaps + 1 );\r\n                        styles.push({\r\n                            'width': width + '%',\r\n                            'left': width + '%'\r\n                        });\r\n                    }\r\n\r\n                    if ( this.event.startTime.minutes() > 0 ) {\r\n                        const distance = ( this.ancestorHeight / 60 ) * this.event.startTime.minutes();\r\n                        styles.push({\r\n                            'top': distance + 'px'\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return styles;\r\n            },\r\n            eventClasses() {\r\n                return {\r\n                    'is-overlapping': this.event.overlaps > 0\r\n                }\r\n            }\r\n        },\r\n        filters: {\r\n            formatEventTime(hour, use12 = false) {\r\n                if ( !hour )\r\n                    return '';\r\n\r\n                if ( use12 )\r\n                    return hour.format( hour.minutes() > 0 ? 'h.mma' : 'ha' ).slice(0, -1);\r\n\r\n                return hour.format( hour.minutes() > 0 ? 'HH.mm' : 'HH' );\r\n            }\r\n        },\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}