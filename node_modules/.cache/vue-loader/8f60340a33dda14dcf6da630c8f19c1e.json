{"remainingRequest":"/Users/lorenz/Documents/code/parley/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lorenz/node_modules/v-calendar-scheduler/components/views/Month.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lorenz/node_modules/v-calendar-scheduler/components/views/Month.vue","mtime":1527292371000},{"path":"/Users/lorenz/Documents/code/parley/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lorenz/Documents/code/parley/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lorenz/Documents/code/parley/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lorenz/Documents/code/parley/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport moment from 'moment';\nimport { EventBus } from '../EventBus';\nimport EventItem from '../EventItem';\nimport IsView from '../mixins/IsView';\n\nexport default {\n    name: \"month\",\n    mixins: [ IsView ],\n    components: { EventItem },\n    data() {\n        return {\n            weekdays: moment.weekdaysShort(),\n            calendar: [],\n        }\n    },\n    mounted() {\n        this.buildCalendar();\n    },\n    methods: {\n        dayClicked(day) {\n            EventBus.$emit('day-clicked', day.d.toDate())\n        },\n        buildCalendar() {\n            this.calendar = [];\n\n            let temp = moment( this.activeDate ).date( 1 );\n            const monthStart = moment(temp);\n            let m = temp.month();\n            let now = moment();\n\n            this.days = [];\n\n            do {\n                // console.log(temp.toDate());\n                const day = moment(temp);\n                let newDay = {\n                    d: day,\n                    isPast: temp.isBefore( now, 'day' ),\n                    isToday: temp.isSame( now, 'day' ),\n                    isDisabled: this.isDayDisabled(temp),\n                    events: this.events.filter( e => moment(e.date).isSame(day, 'day') )\n                        .sort( (a, b) => {\n                            if ( !a.startTime ) return -1;\n                            if ( !b.startTime ) return 1;\n                            return moment(a.startTime, 'HH:mm').format('HH') - moment(b.startTime, 'HH:mm').format('HH');\n                        })\n                };\n                this.days.push(newDay);\n\n                temp.add( 1, 'day' );\n            } while ( temp.month() === m );\n\n            let items = [];\n\n            let paddingOffset = 1;\n            // Some padding at the beginning\n            for ( let p = 0; p < moment( this.activeDate ).date( 1 ).weekday(); p++ )\n            {\n                items.unshift({\n                    d: moment(monthStart).subtract(paddingOffset, 'day'),\n                    isPast: true,\n                    isToday: false,\n                    isDifferentMonth: true,\n                });\n\n                paddingOffset++;\n            }\n\n            // Merge in the array of days\n            items.push.apply( items, this.days );\n\n            // Some padding at the end if required\n            if ( items.length % 7 ) {\n                for ( let p = ( 7 - ( items.length % 7 ) ); p > 0; p-- )\n                {\n                    items.push({\n                        d : moment(temp),\n                        isPast: true,\n                        isToday: false,\n                        isDifferentMonth: true,\n                    });\n                    temp.add( 1, 'day' );\n                }\n            }\n\n            // Split the array into \"chunks\" of seven\n            this.calendar  = items.map( function( e, i ) {\n                return i % 7 === 0 ? items.slice( i, i + 7 ) : null;\n            }).filter( function( e ) { return e; } );\n        },\n    },\n}\n",{"version":3,"sources":["Month.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Month.vue","sourceRoot":"../../../node_modules/v-calendar-scheduler/components/views","sourcesContent":["<template>\r\n    <section class=\"v-cal-content\">\r\n        <div class=\"v-cal-weekdays\">\r\n            <div class=\"v-cal-weekday-item\" v-for=\"weekday in weekdays\">{{ weekday }}</div>\r\n        </div>\r\n        <div class=\"v-cal-days\" v-for=\"row in calendar\">\r\n\r\n            <div :ref=\"'days.day_' + day.d.format('DDD')\" class=\"v-cal-day v-cal-day--month\"\r\n                 @click=\"dayClicked(day)\"\r\n                 :class=\"{\r\n                 'is-today': day.isToday,\r\n                 'is-past': day.isPast,\r\n                 'is-disabled': day.isDisabled,\r\n                 'is-different-month': day.isDifferentMonth }\" v-for=\"day in row\">\r\n                <span class=\"v-cal-day__number\">{{ day.d.date() }}</span>\r\n                <div class=\"v-cal-event-list\">\r\n                    <event-item\r\n                            v-for=\"event, index in day.events\"\r\n                            :key=\"index\"\r\n                            :has-dynamic-size=\"false\"\r\n                            :event=\"event\"\r\n                            :use12=\"use12\"\r\n                    >\r\n                    </event-item>\r\n                    <!--@click.stop=\"eventBus.$emit('event-clicked', event)\" -->\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n<script>\r\n    import moment from 'moment';\r\n    import { EventBus } from '../EventBus';\r\n    import EventItem from '../EventItem';\r\n    import IsView from '../mixins/IsView';\r\n\r\n    export default {\r\n        name: \"month\",\r\n        mixins: [ IsView ],\r\n        components: { EventItem },\r\n        data() {\r\n            return {\r\n                weekdays: moment.weekdaysShort(),\r\n                calendar: [],\r\n            }\r\n        },\r\n        mounted() {\r\n            this.buildCalendar();\r\n        },\r\n        methods: {\r\n            dayClicked(day) {\r\n                EventBus.$emit('day-clicked', day.d.toDate())\r\n            },\r\n            buildCalendar() {\r\n                this.calendar = [];\r\n\r\n                let temp = moment( this.activeDate ).date( 1 );\r\n                const monthStart = moment(temp);\r\n                let m = temp.month();\r\n                let now = moment();\r\n\r\n                this.days = [];\r\n\r\n                do {\r\n                    // console.log(temp.toDate());\r\n                    const day = moment(temp);\r\n                    let newDay = {\r\n                        d: day,\r\n                        isPast: temp.isBefore( now, 'day' ),\r\n                        isToday: temp.isSame( now, 'day' ),\r\n                        isDisabled: this.isDayDisabled(temp),\r\n                        events: this.events.filter( e => moment(e.date).isSame(day, 'day') )\r\n                            .sort( (a, b) => {\r\n                                if ( !a.startTime ) return -1;\r\n                                if ( !b.startTime ) return 1;\r\n                                return moment(a.startTime, 'HH:mm').format('HH') - moment(b.startTime, 'HH:mm').format('HH');\r\n                            })\r\n                    };\r\n                    this.days.push(newDay);\r\n\r\n                    temp.add( 1, 'day' );\r\n                } while ( temp.month() === m );\r\n\r\n                let items = [];\r\n\r\n                let paddingOffset = 1;\r\n                // Some padding at the beginning\r\n                for ( let p = 0; p < moment( this.activeDate ).date( 1 ).weekday(); p++ )\r\n                {\r\n                    items.unshift({\r\n                        d: moment(monthStart).subtract(paddingOffset, 'day'),\r\n                        isPast: true,\r\n                        isToday: false,\r\n                        isDifferentMonth: true,\r\n                    });\r\n\r\n                    paddingOffset++;\r\n                }\r\n\r\n                // Merge in the array of days\r\n                items.push.apply( items, this.days );\r\n\r\n                // Some padding at the end if required\r\n                if ( items.length % 7 ) {\r\n                    for ( let p = ( 7 - ( items.length % 7 ) ); p > 0; p-- )\r\n                    {\r\n                        items.push({\r\n                            d : moment(temp),\r\n                            isPast: true,\r\n                            isToday: false,\r\n                            isDifferentMonth: true,\r\n                        });\r\n                        temp.add( 1, 'day' );\r\n                    }\r\n                }\r\n\r\n                // Split the array into \"chunks\" of seven\r\n                this.calendar  = items.map( function( e, i ) {\r\n                    return i % 7 === 0 ? items.slice( i, i + 7 ) : null;\r\n                }).filter( function( e ) { return e; } );\r\n            },\r\n        },\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]}]}