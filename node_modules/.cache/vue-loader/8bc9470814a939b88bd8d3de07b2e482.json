{"remainingRequest":"/Users/lorenz/Documents/code/parley/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lorenz/Documents/code/parley/node_modules/v-calendar-scheduler/components/views/Day.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lorenz/Documents/code/parley/node_modules/v-calendar-scheduler/components/views/Day.vue","mtime":1527292371000},{"path":"/Users/lorenz/Documents/code/parley/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lorenz/Documents/code/parley/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lorenz/Documents/code/parley/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lorenz/Documents/code/parley/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport moment from 'moment';\nimport { EventBus } from '../EventBus';\nimport EventItem from '../EventItem';\nimport IsView from '../mixins/IsView';\nimport ShowsTimes from '../mixins/ShowsTimes';\n\nexport default {\n    name: \"day\",\n    mixins: [ IsView, ShowsTimes ],\n    components: { EventItem },\n    data() {\n        return {\n            day: null\n        }\n    },\n    mounted() {\n        this.buildCalendar();\n    },\n    methods: {\n        timeClicked(data) {\n            EventBus.$emit('time-clicked', data)\n        },\n        buildCalendar() {\n            let now = moment();\n\n            const today = moment( this.activeDate );\n\n            const dayEvents = this.events.filter( e => moment(e.date).isSame(today, 'day') )\n                .sort( (a, b) => {\n                    if ( !a.startTime ) return -1;\n                    if ( !b.startTime ) return 1;\n                    return moment(a.startTime, 'HH:mm').format('HH') - moment(b.startTime, 'HH:mm').format('HH');\n                });\n            const mappedEvents = dayEvents.map( event => {\n                event.overlaps = dayEvents.filter( e => moment(event.startTime, 'HH:mm').isBetween( moment(e.startTime, 'HH:mm'), moment(e.endTime, 'HH:mm') ) && e !== event ).length;\n                return event;\n            });\n\n            this.day = {\n                d: today,\n                isPast: today.isBefore( now, 'day' ),\n                isToday: today.isSame( now, 'day' ),\n                availableTimes: this.times,\n                events: mappedEvents\n            };\n        }\n    }\n}\n",{"version":3,"sources":["Day.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Day.vue","sourceRoot":"node_modules/v-calendar-scheduler/components/views","sourcesContent":["<template>\r\n    <section class=\"v-cal-content\">\r\n        <div class=\"v-cal-weekdays\">\r\n            <div class=\"v-cal-weekday-item\">{{ activeDate.format('ddd DD/MM') }}</div>\r\n        </div>\r\n        <div class=\"v-cal-days\">\r\n            <div class=\"v-cal-times\">\r\n                <div class=\"v-cal-hour\">{{ allDayLabel }}</div>\r\n                <div class=\"v-cal-hour\" :class=\"{ 'is-now': time.isSame(now, 'hour') }\" v-for=\"time in times\">{{ time | formatTime(use12) }}</div>\r\n            </div>\r\n            <div class=\"v-cal-days__wrapper\">\r\n                <div class=\"v-cal-day v-cal-day--day\" :class=\"{ 'is-today': day.isToday }\" v-if=\"day !== null\">\r\n                    <div class=\"v-cal-day__hour-block\"\r\n                         @click=\"timeClicked({ date: day.d.toDate(), time: null })\">\r\n                        <span class=\"v-cal-day__hour-block-fill\">00:00 <template v-if=\"use12\">PM</template></span>\r\n                        <div class=\"v-cal-day__hour-content\">\r\n                            <div class=\"v-cal-event-list\" :class=\"{'tiny-events': day.events.filter(e => !e.startTime).length > 2}\">\r\n                                <event-item\r\n                                        v-for=\"event,index in day.events.filter(e => !e.startTime)\"\r\n                                        :key=\"index\"\r\n                                        :event=\"event\"\r\n                                        :use12=\"use12\"\r\n                                        @click.stop=\"eventBus.$emit('event-clicked', event)\">\r\n                                </event-item>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"v-cal-day__hour-block\"\r\n                         @click=\"timeClicked({ date: day.d.toDate(), time: time.hour() })\"\r\n                         :class=\"[ time.isSame(now, 'hour') ? 'is-now' : '', hourClass ]\" v-for=\"time in day.availableTimes\">\r\n                        <span class=\"v-cal-day__hour-block-fill\">{{ time | formatTime(use12) }}</span>\r\n                        <div class=\"v-cal-day__hour-content\">\r\n                            <div class=\"v-cal-event-list\">\r\n                                <event-item\r\n                                        v-for=\"event, index in day.events\"\r\n                                        v-if=\"event.startTime && time.hours() === event.startTime.hours()\"\r\n                                        :key=\"index\"\r\n                                        :event=\"event\"\r\n                                        :use12=\"use12\">\r\n                                </event-item>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n<script>\r\n    import moment from 'moment';\r\n    import { EventBus } from '../EventBus';\r\n    import EventItem from '../EventItem';\r\n    import IsView from '../mixins/IsView';\r\n    import ShowsTimes from '../mixins/ShowsTimes';\r\n\r\n    export default {\r\n        name: \"day\",\r\n        mixins: [ IsView, ShowsTimes ],\r\n        components: { EventItem },\r\n        data() {\r\n            return {\r\n                day: null\r\n            }\r\n        },\r\n        mounted() {\r\n            this.buildCalendar();\r\n        },\r\n        methods: {\r\n            timeClicked(data) {\r\n                EventBus.$emit('time-clicked', data)\r\n            },\r\n            buildCalendar() {\r\n                let now = moment();\r\n\r\n                const today = moment( this.activeDate );\r\n\r\n                const dayEvents = this.events.filter( e => moment(e.date).isSame(today, 'day') )\r\n                    .sort( (a, b) => {\r\n                        if ( !a.startTime ) return -1;\r\n                        if ( !b.startTime ) return 1;\r\n                        return moment(a.startTime, 'HH:mm').format('HH') - moment(b.startTime, 'HH:mm').format('HH');\r\n                    });\r\n                const mappedEvents = dayEvents.map( event => {\r\n                    event.overlaps = dayEvents.filter( e => moment(event.startTime, 'HH:mm').isBetween( moment(e.startTime, 'HH:mm'), moment(e.endTime, 'HH:mm') ) && e !== event ).length;\r\n                    return event;\r\n                });\r\n\r\n                this.day = {\r\n                    d: today,\r\n                    isPast: today.isBefore( now, 'day' ),\r\n                    isToday: today.isSame( now, 'day' ),\r\n                    availableTimes: this.times,\r\n                    events: mappedEvents\r\n                };\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]}]}